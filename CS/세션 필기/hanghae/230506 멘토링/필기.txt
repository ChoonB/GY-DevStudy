면접을 잘 보려면 자신에게 유리한 질문을 이끌어내야한다.
내가 회사를 면접을 진행한다는 마인드로 가야한다. 

이력서 작성 방법
2개가 가장 중요 : 내가 자신있는 기술 스택 프로젝트에서 실제로 담당했던 내용
허전해보여도 상관없다. 개인사 사진 다 필요없다. 자기소개서 잘 안본다.

좋은회사 고르는 방법
들어가기 어려운 회사 면접프로세스가 빡센 회사
첫 회사가 중요하다.
돈때문에 방향성을 잃지는 말자.

내가 굽힐필요도 없고 굽히면 안좋다. 대등한 관계로 본다고 생각해야한다.
회사에 대한 정보를 이미 많이 알고 있어야 한다.
본인이 계속 공부하고 안주하지않고 변화를 추구해야한다.
회사도 중요하지만 직무도 중요하다. 플랫폼 개발인가? 서비스 개발인가?

학습 방법 - 공식 문서, 책 or 논문, 동영상 강의, 블로그나 스택 오버플로우
알고리즘/인터뷰 : 알고리즘 문제해결 전략, 코딩 인터뷰 완전 분석, 면접을 위한 CS 전공지식 노트
백엔드 : Java 기본서(Java의 정석, 혼자 공부하는 자바 등등...), 이펙티브 자바 3판, Head first design pattern

챗gpt로 공식문서를 요약해줘 이런식으로 활용해도 괜찮다
자바 공부 많이해야한다 이펙티브 자바 3판 괜찮다.
Head first design pattern 이 책도 좋다.

이력서에 책이름 적는건 의미가 없다.
AWS 자격증은 가성비는 안좋다. AWS에만 국한되어있기때문에
차라리 인프라 스트럭처 학습을 하는게 더 좋다.
리눅스 OS에대한 학습을 먼저하고 인프라 개발자가 될꺼면 해라.
백엔드 개발자로는 방향이 조금 다르다.
AWS는 유즈케이스가 진짜 많아서 그거 찾아봐도 좋다
AWS에 너무 디펜던시가 심하면 문제 해결을 못할 수도 있다.

OS 네트워크 알고리즘 자료구조 같은 펀더멘탈을 먼저 공부하는게 더 중요하다.

context switching 비용을 낮춰주는게 중요하다. optimizing이 중요하다.
한 일을 하다가 다른 일로 스위칭되면 비용이랑 오버헤드가 발생하기 때문에

스케일아웃 시간을 조정해야하는데
실제로 뜨는 시간과 어플리케이션이 시작되는 시간이 나뉘어서 생각해서 측정해봐야한다.

평균적으로 서버 4대정도 띄운다.
메서드 명도 영어이름으로 그럴듯하게.

getConnection()은 커넥션 자체에 걸리는 시간이라 해결하기 힘들다

운영체제
컴퓨터 네트워크
https://roadmap.sh/backend 로드맵
어느정도 얇고 넓게는 알고 가야한다